<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List App</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>My To-Do List</h1>
        <form id="todo-form">
            <input type="text" id="todo-input" placeholder="Add a new task..." required>
            <button type="submit">Add Task</button>
        </form>
        <ul id="todo-list"></ul>
    </div>

    <script src="script.js"></script>
</body>
</html>

body {
    font-family: 'Arial', sans-serif;
    background-color: #f4f4f4;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

.container {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    width: 300px;
    text-align: center;
}

h1 {
    margin-bottom: 20px;
    color: #333;
}

form {
    display: flex;
}

#todo-input {
    flex: 1;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px 0 0 4px;
    outline: none;
}

button {
    padding: 10px;
    border: none;
    background: linear-gradient(to bottom, #000000 0%, #ffffff 100%);
    color: white;
    cursor: pointer;
    border-radius: 0 4px 4px 0;
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: #005bb5;
}

ul {
    list-style-type: none;
    padding: 0;
    margin-top: 20px;
}

li {
    background-color: #f9f9f9;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-bottom: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

li.completed {
    text-decoration: line-through;
    color: gray;
}

.edit-btn, .delete-btn {
    background: linear-gradient(to bottom, #000000 0%, #ffffff 100%);
    border: none;
    color: white;
    padding: 5px;
    margin-left: 5px;
    cursor: pointer;
    border-radius: 4px;
}

.edit-btn:hover {
    background-color: #005bb5;
}

.delete-btn {
    background-color: red;
}

.delete-btn:hover {
    background-color: darkred;
}

const todoForm = document.getElementById('todo-form');
const todoInput = document.getElementById('todo-input');
const todoList = document.getElementById('todo-list');


document.addEventListener('DOMContentLoaded', loadTasks);


todoForm.addEventListener('submit', function (e) {
    e.preventDefault();
    addTask(todoInput.value);
    todoInput.value = ''; 
});


function addTask(taskText) {
    if (taskText.trim() === '') return;

    const li = document.createElement('li');


    const taskSpan = document.createElement('span');
    taskSpan.textContent = taskText;

 
    const editBtn = document.createElement('button');
    editBtn.textContent = 'Edit';
    editBtn.classList.add('edit-btn');
    editBtn.addEventListener('click', () => editTask(li, taskSpan));


    const deleteBtn = document.createElement('button');
    deleteBtn.textContent = 'Delete';
    deleteBtn.classList.add('delete-btn');
    deleteBtn.addEventListener('click', () => {
        todoList.removeChild(li);
        saveTasks();
    });


    li.appendChild(taskSpan);
    li.appendChild(editBtn);
    li.appendChild(deleteBtn);
    todoList.appendChild(li);

    saveTasks();
}


function editTask(li, taskSpan) {
    const editInput = document.createElement('input');
    editInput.type = 'text';
    editInput.value = taskSpan.textContent;

    const saveBtn = document.createElement('button');
    saveBtn.textContent = 'Save';
    saveBtn.classList.add('edit-btn');
    saveBtn.addEventListener('click', () => {
        taskSpan.textContent = editInput.value;
        li.replaceChild(taskSpan, editInput);
        li.replaceChild(editBtn, saveBtn);
        saveTasks();
    });

    li.replaceChild(editInput, taskSpan);
    li.replaceChild(saveBtn, li.querySelector('.edit-btn'));
}

function saveTasks() {
    const tasks = [];
    todoList.querySelectorAll('li').forEach(li => {
        const taskText = li.querySelector('span').textContent;
        tasks.push(taskText);
    });
    localStorage.setItem('tasks', JSON.stringify(tasks));
}


function loadTasks() {
    const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
    tasks.forEach(taskText => addTask(taskText));
}
